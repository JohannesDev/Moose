
class Field {
  number: Int

  func num() > Int { return number }
  func represent() > String { return String(number) }
}

class FilledField < Field {
  filledWith: String
  
  func represent() > String { return filledWith }
}

class Board {
  row1: (Field, Field, Field)
  row2: (Field, Field, Field)
  row3: (Field, Field, Field)
  
  func getItem(i: Int) > (Field, Field, Field) {
    if i == 0 { 
      return row1 
    } else if  i == 1  { 
      return row2 
    } else { return row3 }
  }

  func length() > Int { return 3 }

  func represent() > String { 
    mut str = ""
    for (f1, f2, f3) in [row1, row2, row3] {
      str +: String(f1)
      str +: String(f2)
      str +: String(f3)
      str +: "\n"
    }
    return str
  }
}

board = Board(
  (Field(1), Field(2), Field(3)),
  (Field(4), Field(5), Field(6)),
  (Field(7), Field(8), Field(9))
)

print(board)